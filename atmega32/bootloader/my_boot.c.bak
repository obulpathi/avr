

/*
void my_boot (void)
{
  uint8_t data[128] = { 0x44 };

  // program page 0
  boot_page_erase (page);
  boot_spm_busy_wait ();	// Wait until the memory is erased.

  for (i = 0; i < SPM_PAGESIZE; i += 2)
  {
// Set up little-endian word.

    uint16_t w = *buf++;

    w += (*buf++) << 8;

    boot_page_fill (page + i, w);
  }

  boot_page_write (page);	// Store buffer in flash page.
  boot_spm_busy_wait ();	// Wait until the memory is written.

  // Reenable RWW-section again. We need this if we want to jump back
  // to the application after bootloading.

  boot_rww_enable ();
  boot_program_page (0, data);

	// erase page 0
	boot_page_erase(0);

	boot_spm_busy_wait();
	boot_rww_enable();

  PORTD = ~PORTD;

  return;
}

*/
